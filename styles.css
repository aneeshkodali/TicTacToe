*, *::after, *::before {
    box-sizing: border-box;
}

/*variables*/
:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)*0.9);
}

body {
    margin: 0;
}

.board {

    /*board takes up whole screen*/
    width: 100vw;
    height: 100vh;

    /*center board*/
    display: grid;
    justify-content: center;
    align-content: center;

    /*center X's and O's within cells*/
    justify-items: center;
    align-items: center;


    /*arrange cells as 3x3*/
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;

    cursor: pointer;
}

/*change cursor on filled cell*/
.cell.x, .cell.circle {
    cursor: not-allowed;
}

.cell.x::before, .cell.x::after, .cell.circle::before {
    background-color: black;
}


.board.x .cell:not(.x):not(.circle):hover::before, .board.x .cell:not(.x):not(.circle):hover::after, .board.circle .cell:not(.x):not(.circle):hover::before {
    background-color: lightgrey;
}


/*remove top border for top 3 cells*/
.cell:first-child, .cell:nth-child(2), .cell:nth-child(3) {
    border-top: none;
}
/*remove left border for left 3 cells*/
.cell:nth-child(3n+1) {
    border-left: none;
}
/*remove right border for right 3 cells*/
.cell:nth-child(3n+3) {
    border-right: none;
}
/*remove bottom border for bottom 3 cells*/
.cell:nth-child(7), .cell:nth-child(8), .cell:nth-child(9) {
    border-bottom: none;
}

/*create X = 2 vertical lines*/
/*also similar styling for when hover over cell to display X*/
.cell.x::before, .cell.x::after, .board.x .cell:not(.x):not(.circle):hover::before, .board.x .cell:not(.x):not(.circle):hover::after {
    content: '';
    width: calc(var(--mark-size)*0.15);
    height: var(--mark-size);
    position: absolute;
}
/*rotate one of the lines*/
/*also similar styling for when hover over cell to display X*/
.cell.x::before, .board.x .cell:not(.x):not(.circle):hover::before {
    transform: rotate(45deg);
}
/*rotate other line*/
/*also similar styling for when hover over cell to display X*/
.cell.x::after, .board.x .cell:not(.x):not(.circle):hover::after {
    transform: rotate(-45deg);
}

/*create circle = 2 circles*/
/*also similar styling for when hover over cell to display circle*/

.cell.circle::before, .cell.circle::after, .board.circle .cell:not(.x):not(.circle):hover::before, .board.circle .cell:not(.x):not(.circle):hover::after {
    content: '';
    border-radius: 50%;
    position: absolute;
}
/*style the 'before' circle (larger one)*/
/*also similar styling for when hover over cell to display circle*/
.cell.circle::before, .board.circle .cell:not(.x):not(.circle):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}
/*style the 'after' circle (smaller one)*/
/*also similar styling for when hover over cell to display circle*/

.cell.circle::after, .board.circle .cell:not(.x):not(.circle):hover::after {
    width: calc(var(--mark-size)*0.7);
    height: calc(var(--mark-size)*0.7);
    background-color: white;

}

/*style winning message*/
.winning-message {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);

    display: flex;
    justify-content: center;
    align-items: center;

    color: white;
    font-size: 5rem;
}

/*style winning message button*/
.winning-message button {
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: 0.25em 0.5em;
    cursor: pointer;
}